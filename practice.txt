 {/* <View style={styles.view2}>
            <Text style={styles.text3}>Choose a meal type</Text>
            <View style={styles.view3}>
              <Text style={styles.text4}>2 REQUIRED</Text>
            </View>
          </View> */}
          {/* <View key={this.state.key}>
            {this.state.prefrences.map((item,pindex) => (
              <View key={item.id}>
                <View style={styles.view7}>
                  <Text style={styles.text8}>
                    {
                      menuDetailedData[index].preferenceTitle[
                        this.state.prefrences.indexOf(item)
                      ]
                    }
                  </Text>
                  {this.state.required[this.state.prefrences.indexOf(item)] && (
                    <View style={styles.view9}>
                      <Text style={styles.text7}>
                        {
                          this.state.minimum_quatity[
                            this.state.prefrences.indexOf(item)
                          ]
                        }{' '}
                        REQUIRED
                      </Text>
                    </View>
                  )}
                </View>
                <View style={styles.view10}>
                  {item.map((items,index) => (
                    <TouchableOpacity
                      key={items.id}
                      onPress={() => {
                        // console.log(item, 'checking items')
                        var {prefrences, selectedPrefrences } = this.state
                        if(this.state.minimum_quatity[index] !== null){
                            // console.log('hello')
                         // const check = item.filter((data,i) => i == index)[0]is 
                          // console.log(check, 'check console')
                          console.log( prefrences[index], 'check before')
                        //  prefrences[index][index]= items.checked == true ? false : true
                         items.checked = items.checked == true ? false : true
                            if(items.checked == true ){
                              selectedPrefrences.push(items)
                            }
                           this.setState({
                            // prefrences,
                            selectedPrefrences,
                            key: this.state.key + 1
                           })
                          console.log( this.state.prefrences[pindex][index],'value check after')
                        }
                  
                        const id = index;
                        if (this.state.minimum_quatity[id] !== null) {
                          const check = item.filter(items =>
                            items.checked ? items : null,
                          );
                          this.state.prefrences[id].forEach(i => {
                            if (i.id === items.id) {
                              if (
                                check.length < this.state.minimum_quatity[id]
                              ) {
                                i.checked = !i.checked;
                              } else {
                                i.checked = false;
                              }
                            }
                          }),
                            (this.state.counter[id] =
                              this.state.counter[id] + 1),
                            this.setState({
                              prefrences: [...this.state.preferences],
                              counter: [this.state.counter],
                            });
                        } else {
                          this.state.prefrences[id].forEach(i => {
                            if (i.id === items.id) {
                              i.checked = !i.checked;
                            }
                          });
                          this.setState({
                            preferences: [...this.state.prefrences],
                          });
                        }
                      }}>
                      <View style={styles.view4}>
                        <View style={styles.view19}>
                          <View style={styles.view6}>
                            <CheckBox
                              center
                              checkedIcon="check-square-o"
                              uncheckedIcon="square-o"
                              checked={items.checked}
                              checkedColor={color.buttons}
                            />
                            <Text style={{color: color.grey2, marginLeft: -10}}>
                              {items.name}
                            </Text>
                          </View>
                          <Text style={styles.text6}>
                            PKR {items.price.toFixed(2)}
                          </Text>
                        </View>
                      </View>
                    </TouchableOpacity>
                  ))}
                </View>
              </View>
            ))}
          </View> */}